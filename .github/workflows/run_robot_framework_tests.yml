# runs tests for push-events, for pull requests and using cron schedule:
name: Run Robot Framework Tests
on:
    push:
        # runs tests for commits pushed to master
        branches: [develop, master]
jobs:
    run_tests:
        runs-on: ubuntu-20.04
        steps:
            # checkout code from a repository
            - uses: actions/checkout@v2

            # create folder for test reports
            - name: Create folder for reports
              run: mkdir reports

            - name: Copy redirect to reports
              run: cp helpers/404.html reports/404.html
            - name: Set up Python 3.9
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
#                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - run: bash setup_venv.sh

              # install openvpn
            - name: Install openvpn
              run: bash setup_vpn.sh
            # run Robot Framework tests inside Docker container
            - name: Run Robot Framework Tests
              env:
                  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET}}
              run: venv/bin/python -m test # venv/bin/python -m robot -d reports/ tests/

#            - name: Upload reports
#              uses: actions/upload-artifact@v3
#              if: always()
#              with:
#                  name: reports
#                  # set path to Robot Framework results reports. Exclude dummy file that is needed because of ppodgorsek image priviledges.
#                  path: ${{ github.workspace }}/reports
#                  retention-days: 15
#
#            - name: Deploy to pages
#              if: always()
#              uses: peaceiris/actions-gh-pages@v3.7.3
#              with:
#                  github_token: ${{ secrets.GITHUB_TOKEN }}
#                  publish_branch: gh-pages
#                  publish_dir: reports
            - name: Stop Forti VPN
              if: always()
              run: sleep 10 && sudo pkill forti
