# runs tests for push-events, for pull requests and using cron schedule:
name: Run Robot Framework Tests
on:
    push:
        # runs tests for commits pushed to master
        branches: [develop, master]
jobs:
    run_tests:
        runs-on: ubuntu-20.04
        steps:
            # checkout code from a repository
            - uses: actions/checkout@v2

            # create folder for test reports
            - name: Create folder for reports
              run: mkdir reports

            - name: Copy redirect to reports
              run: cp helpers/404.html reports/404.html
            # install openvpn
            - run: sudo apt-get install wget curl expect -y
            - run: wget http://cdn.software-mirrors.com/forticlientsslvpn_linux_4.4.2328.tar.gz
            - run: tar -xzvf forticlientsslvpn_linux_4.4.2328.tar.gz
            - run: sudo apt-get install ppp iproute2 -y
            - run: cp ./setup.linux.sh ./forticlientsslvpn/64bit/helper/
            - run: sudo chown root:root ./setup.linux.sh
            - run: sudo chmod 600 ./setup.linux.sh
            - run: sudo chmod +x ./setup.linux.sh
            - run: ./forticlientsslvpn/64bit/helper/setup.linux.sh -Y
            - run: sudo chown root:root ./forti-vpn.sh
            - run: sudo chmod 600 ./forti-vpn.sh
            - run: sudo chmod +x ./forti-vpn.sh
            - run: sudo ./forti-vpn.sh &
            - run: sleep 10
            - run: sudo pkill forti
            # - run: ./forticlientsslvpn/64bit/forticlientsslvpn_cli --server serveraddress:port --vpnuser username
            # - run: sudo chown root:root ./forti-vpn.sh
            # - run: sudo chmod 600 ./forti-vpn.sh
            # - run: sudo chmod +x ./forti-vpn.sh
            # - run: wget https://filestore.fortinet.com/forticlient/downloads/forticlient_vpn_7.0.0.0018_amd64.deb
            # - run: sudo apt install ./forticlient_vpn_*_amd64.deb
            # - run: sudo apt-get install ppp expect

#            - name: Set up Python 3.9
#              uses: actions/setup-python@v2
#              with:
#                  python-version: 3.9
#            - name: Install dependencies
#              run: |
#                  python -m pip install --upgrade pip
##                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#            - run: bash setup_venv.sh
#            # run Robot Framework tests inside Docker container
#            - name: Run Robot Framework Tests
#              run: venv/bin/python -m robot -d reports/ tests/
#
#            - name: Upload reports
#              uses: actions/upload-artifact@v3
#              if: always()
#              with:
#                  name: reports
#                  # set path to Robot Framework results reports. Exclude dummy file that is needed because of ppodgorsek image priviledges.
#                  path: ${{ github.workspace }}/reports
#                  retention-days: 15
#
#            - name: Deploy to pages
#              if: always()
#              uses: peaceiris/actions-gh-pages@v3.7.3
#              with:
#                  github_token: ${{ secrets.GITHUB_TOKEN }}
#                  publish_branch: gh-pages
#                  publish_dir: reports
